---------1---------
generationOffsetPublisher - genOffset_Publisher
// Отвечает за публикацию оффсета в ZooKeeper

generationOffsetReader - genOffset_Reader
// Отвечает за вычитку оффсета из ZooKeeper


---------2---------
processedOffsetAccumulator - Accumulator_procOffset
// Собирает в себе оффсеты с производными(обработанными) сущностями

processedOffsetPublisher - Publisher_procOffset
// Отправляет оффсеты обработанных сущностей в ZooKeeper

// На четырех переменных выше кажется, что все не так плохо, однако в классе около десятка переменных со словами "поколение" и "оффсет" в разных комбинациях. При знакомстве с проектом было очень тяжело запомнить и отличить переменные
// В исправленных вариантах не уверен, при каком-то изменении\упразднении терялся смысл названия перемнной


---------3---------
filter1 - filter_First
filter2 - filter_Second
// Фильтры из задачи про фильтры Блюма


---------4---------
connectionFactory1 - connFactoryPrimary
connectionFactory2 - connFactorySecondary
// В приложении происходит подключение к нескольким брокерам сообщений. Причем одно первично


---------5---------
result - resultList(indexesList)
// Результирующий список индексов(Index)


---------6---------
MAX - MAX_URL_LENGHT
// Максимальная длина ссылки, которая строится для запроса - константа


---------7---------
jackson - objectMapper
// Маппер, который переводил JSON в объекты Java


---------8---------
topicToMessageExecutors - rawEntityExecutors
// Класс обрабатывал сырые сущности и передавал их на перерасчет. В данном случае под каждую сущность был свой Executor, хранились в списке.


---------9---------
ISS - ISS_Source(ISSDataSource)
// Источник данных из ISS


---------10---------
recalculation - reprocessRequest


---------11---------
discount - discount_rub
// Размер скидки в рублях


---------12---------
currentTime - currenTimeInMills
// Текущее время в миллисекундах, собиралось для метрик и логов
